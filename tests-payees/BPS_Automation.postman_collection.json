{
	"info": {
		"_postman_id": "127615c7-5364-4d5a-8694-aabe91d67a22",
		"name": "BPS_Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Add Managed Payee -- FISERV",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "15e22dbf-7e3b-4ae7-ad57-a5f1ca7d41e4",
						"exec": [
							"pm.environment.set(\"ManagedPayee\", \"SPRINT WIRELESS\");",
							"pm.environment.set(\"Accountnum\", \"43565464565654\");",
							"pm.environment.set(\"phonenum\", \"8882114727\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "65e67490-25a6-48e4-8859-d2c01a3c2549",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.name\", \"SPRINT WIRELESS\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.status\", \"ACTIVE\");",
							"tests[\"Got Payees successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify Payee\"] = pm.expect(pm.response.text()).to.include('Payee');",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"}); ",
							"",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"//pm.environment.set(\"Payeeid\", convertedData.Success.Payee.id);",
							"var Payeeid = convertedData.Success.Payee.id._;",
							"console.log(Payeeid)",
							"",
							"// Assigning the extracted value in to a global variable",
							"pm.environment.set(\"Payeeid\", Payeeid);",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\""
					},
					{
						"key": "intuit_payment_app_token",
						"type": "text",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"type": "text",
						"value": "PRIMARY"
					},
					{
						"key": "intuit_loginId",
						"type": "text",
						"value": ""
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "identity;q=1, *;q=0"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Payee xmlns=\"http://www.intuit.com/payment/cdm/v1\">\n<name>{{ManagedPayee}}</name>\n<nickname>{{ManagedPayee}}</nickname>\n<accountNumber>{{Accountnum}}</accountNumber>\n<address>\n<address1>20 Payee road</address1>\n<city>Norcroos</city>\n<state>GA</state>\n<country>US</country>\n<postalCode>30091</postalCode>\n</address>\n<phoneNumber>\n<number>{{phonenum}}</number>\n</phoneNumber>\n<emailAddress/>\n<categoryId idDomain=\"IPE\">103717</categoryId>\n<categoryName>uncategorized</categoryName>\n<merchantId idDomain=\"IPE\"/>\n<status>ACTIVE</status>\n<cutoffTime>15:00:00.000-07:00</cutoffTime>\n<leadDays>4</leadDays>\n<payeeType>MANAGED</payeeType>\n</Payee>"
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payee",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payee"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetPayees",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Count: \"  + convertedData.Success.Payees.Payee.length] = true;",
							"tests[\"Got Payees successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify Payees\"] = pm.expect(pm.response.text()).to.include('Payees');",
							"tests[\"Verify Payee\"] = pm.expect(pm.response.text()).to.include('Payee');",
							"tests[\"verify metadata\"] = pm.expect(pm.response.text()).to.include('metaData');",
							"",
							"",
							"//pm.test(\"Check Payee Name\", function () {",
							"//    pm.expect(convertedData.Success.Payees.Payee.name).to.equal(\"ManagePayee\");",
							"//    pm.expect(convertedData.Success.Payees.Payee.status).to.equal(\"ACTIVE\");",
							"//});",
							"",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\"",
						"type": "text"
					},
					{
						"key": "intuit_payment_app_token",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"type": "text",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"value": "PRIMARY",
						"type": "text"
					},
					{
						"key": "intuit_loginId",
						"value": "",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "identity;q=1, *;q=0",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payee",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payee"
					]
				},
				"description": "This test is to get Payee details from BPS"
			},
			"response": []
		},
		{
			"name": "GetPayee - Single Payee",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Count: \"  + convertedData.Success.Payees.Payee.length] = true;",
							"tests[\"Got Payees successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"",
							"",
							"",
							"//pm.test(\"Check Payee Name\", function () {",
							"//    pm.expect(convertedData.Success.Payees.Payee.name).to.equal(\"ManagePayee\");",
							"//    pm.expect(convertedData.Success.Payees.Payee.status).to.equal(\"ACTIVE\");",
							"//});",
							"",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\"",
						"type": "text"
					},
					{
						"key": "intuit_payment_app_token",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"type": "text",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"value": "PRIMARY",
						"type": "text"
					},
					{
						"key": "intuit_loginId",
						"value": "",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "identity;q=1, *;q=0",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payee",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payee"
					]
				},
				"description": "This test is to get Payee details from BPS"
			},
			"response": []
		},
		{
			"name": "Add UnManaged Payee -- FISERV",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "93f6dca4-20fd-43e7-85c0-049241a88862",
						"exec": [
							"pm.environment.set(\"UnManagedPayee\", \"TestPayee\");",
							"pm.environment.set(\"Accountnum\", \"12345678910\");",
							"pm.environment.set(\"phonenum\", \"8689558833\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "483ac3b9-5bca-4bbf-b5ab-8d1a687a19c9",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.name\", \"TestPayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.status\", \"ACTIVE\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.payeeType\", \"UNMANAGED\");",
							"tests[\"Got Payees successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify Payee\"] = pm.expect(pm.response.text()).to.include('Payee');",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"}); ",
							"",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\"",
						"type": "text"
					},
					{
						"key": "intuit_payment_app_token",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"type": "text",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"value": "PRIMARY",
						"type": "text"
					},
					{
						"key": "intuit_loginId",
						"value": "",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "identity;q=1, *;q=0",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Payee xmlns=\"http://www.intuit.com/payment/cdm/v1\">\n<name>{{UnManagedPayee}}</name>\n<nickname>{{UnManagedPayee}}</nickname>\n<accountNumber>{{Accountnum}}</accountNumber>\n<address>\n<address1>20 Payee road</address1>\n<city>Norcroos</city>\n<state>GA</state>\n<country>US</country>\n<postalCode>30091</postalCode>\n</address>\n<phoneNumber>\n<number>{{phonenum}}</number>\n</phoneNumber>\n<emailAddress/>\n<categoryId idDomain=\"IPE\">103717</categoryId>\n<categoryName>uncategorized</categoryName>\n<merchantId idDomain=\"IPE\"/>\n<status>ACTIVE</status>\n<cutoffTime>15:00:00.000-07:00</cutoffTime>\n<leadDays>4</leadDays>\n<payeeType>UNMANAGED</payeeType>\n</Payee>"
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payee",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payee"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Managed Payee -- FISERV",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "15e22dbf-7e3b-4ae7-ad57-a5f1ca7d41e4",
						"exec": [
							"pm.environment.set(\"ManagedPayee\", \"SPRINT WIRELESS\");",
							"pm.environment.set(\"Accountnum\", \"43565464565654\");",
							"pm.environment.set(\"phonenum\", \"8882114727\");"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "65e67490-25a6-48e4-8859-d2c01a3c2549",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.name\", \"SPRINT WIRELESS Update\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.status\", \"ACTIVE\");",
							"tests[\"Got Payees successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify Payee\"] = pm.expect(pm.response.text()).to.include('Payee');",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"}); ",
							"",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/xml",
						"type": "text"
					},
					{
						"key": "Authorization",
						"value": "INTUITAUTH intuit-app-token=\"\",intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\",intuit-fiscid=\"{{loginid}}\"",
						"type": "text"
					},
					{
						"key": "Accept-Encoding",
						"value": "identity;q=1, *;q=0",
						"type": "text"
					},
					{
						"key": "bbs_realm_id",
						"value": "1038104",
						"type": "text"
					},
					{
						"key": "intuit-subscriber",
						"value": "",
						"type": "text"
					},
					{
						"key": "intuit_offeringid",
						"value": "BPUI",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Payee xmlns=\"http://www.intuit.com/payment/cdm/v1\">\n    <Payee>\n        <id idDomain=\"IPE\">44629</id>\n        <revision>3</revision>\n        <metaData>\n            <createdTime>2019-12-29T18:00:06.606-08:00</createdTime>\n            <lastUpdatedTime>2019-12-29T18:03:53.374-08:00</lastUpdatedTime>\n        </metaData>\n        <name>{{ManagedPayee}} Update</name>\n        <nickname>{{ManagedPayee}} Update</nickname>\n        <accountNumber>****5654</accountNumber>\n        <address>\n            <address1>20 Payee road</address1>\n            <city>Norcroos</city>\n            <state>GA</state>\n            <country>US</country>\n            <postalCode>30091</postalCode>\n        </address>\n        <phoneNumber>\n            <number>{{phonenum}}</number>\n        </phoneNumber>\n        <emailAddress/>\n        <categoryId idDomain=\"IPE\">103717</categoryId>\n        <categoryName>Uncategorized</categoryName>\n        <merchantId idDomain=\"IPE\"/>\n        <status>ACTIVE</status>\n        <cutoffTime>20:59:00.000-08:00</cutoffTime>\n        <leadDays>6</leadDays>\n        <supportExpeditedPayment>true</supportExpeditedPayment>\n        <payeeType>UNMANAGED</payeeType>\n        <eBillStatus>NOT_AVAILABLE</eBillStatus>\n        <trialPeriod>false</trialPeriod>\n        <lastPaidAmount/>\n    </Payee>"
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payee",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payee"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete- Single Payee",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Count: \"  + convertedData.Success.Payee.length] = true;",
							"tests[\"Payee Deleted successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.name\", \"SPRINT WIRELESS\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.status\", \"DELETED\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payee.status\", \"UNMANAGED\");",
							"//pm.test(\"Check Payee Name\", function () {",
							"//    pm.expect(convertedData.Success.Payees.Payee.name).to.equal(\"ManagePayee\");",
							"//    pm.expect(convertedData.Success.Payees.Payee.status).to.equal(\"ACTIVE\");",
							"//});",
							"",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\""
					},
					{
						"key": "intuit_payment_app_token",
						"type": "text",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"type": "text",
						"value": "PRIMARY"
					},
					{
						"key": "intuit_loginId",
						"type": "text",
						"value": ""
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "identity;q=1, *;q=0"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payee/{{Payeeid}}",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payee",
						"{{Payeeid}}"
					]
				},
				"description": "This test is to get Payee details from BPS"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "1d357b3a-5ac9-4dd3-b653-bb297f3e9a4c",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "024687ed-8aa2-47d6-bafc-219628de0c0f",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}