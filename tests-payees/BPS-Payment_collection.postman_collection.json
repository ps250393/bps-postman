{
	"info": {
		"_postman_id": "5cc22625-b830-42c1-9395-634bd346e157",
		"name": "BPS-Payment_collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get Payments",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, false);",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Count: \"  + convertedData.Success.Payments.Payment.length] = true;",
							"tests[\"Got Payments successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify amount\"] = pm.expect(pm.response.text()).to.include('amount');",
							"tests[\"Verify date\"] = pm.expect(pm.response.text()).to.include('date');",
							"tests[\"verify metadata\"] = pm.expect(pm.response.text()).to.include('metaData');",
							"",
							"expectResponseBodyToHaveJsonUnorderedArray(\"Success.Payments.Payment\", [",
							"        {pathToProperty: \"id._\", expectedValue: \"299615\"},",
							"        {pathToProperty: \"revision\", expectedValue: \"4\"},",
							"        {pathToProperty: \"metaData.createdTime\", expectedValue: \"2019-12-19T13:20:58.473-08:00\"},",
							"        {pathToProperty: \"metaData.lastUpdatedTime\", expectedValue: \"2019-12-19T14:01:19.470-08:00\"},",
							"        {pathToProperty: \"date\", expectedValue: \"2019-12-23\"},",
							"        {pathToProperty: \"amount.currencyCode\", expectedValue: \"USD\"},",
							"        {pathToProperty: \"amount.amount\", expectedValue: \"11.22\"},",
							"        {pathToProperty: \"accountId._\", expectedValue: \"43234\"},",
							"        {pathToProperty: \"accountName\", expectedValue: \"Personal Checking\"},",
							"        {pathToProperty: \"accountNickname\", expectedValue: \"Personal Checking\"},",
							"        {pathToProperty: \"status\", expectedValue: \"CANCELED\"},",
							"        {pathToProperty: \"confirmationNumber\", expectedValue: \"PV28S-G7T5C\"},",
							"        {pathToProperty: \"expectedDeliveryDate\", expectedValue: \"2019-12-23\"},",
							"        {pathToProperty: \"payeeId._\", expectedValue: \"44503\"},",
							"        {pathToProperty: \"payeeName\"},",
							"        {pathToProperty: \"payeeNickname\"},",
							"        {pathToProperty: \"payeeAccountNumber\", expectedValue: \"****6454\"},",
							"        {pathToProperty: \"deliveryMethod\", expectedValue: \"STANDARD_ELECTRONIC\"},",
							"        {pathToProperty: \"categoryId._\", expectedValue: \"103703\"},",
							"        {pathToProperty: \"categoryName\", expectedValue: \"Telephone\"},",
							"        {pathToProperty: \"autoPayment\", expectedValue: \"false\"},",
							"        {pathToProperty: \"address\", expectedValue: \"\"}",
							"        ]);",
							"",
							"//pm.test(\"Check Payee Name\", function () {",
							"//    pm.expect(convertedData.Success.Payees.Payee.name).to.equal(\"ManagePayee\");",
							"//    pm.expect(convertedData.Success.Payees.Payee.status).to.equal(\"ACTIVE\");",
							"//});",
							"",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\""
					},
					{
						"key": "intuit_payment_app_token",
						"type": "text",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"type": "text",
						"value": "PRIMARY"
					},
					{
						"key": "intuit_loginId",
						"type": "text",
						"value": ""
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "identity;q=1, *;q=0"
					},
					{
						"key": "bbs_realm_id",
						"value": "{{realmid}}",
						"type": "text",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payment",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payment"
					]
				},
				"description": "This test is to get Payee details from BPS"
			},
			"response": []
		},
		{
			"name": "Post Single Payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Posted Payment successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify amount\"] = pm.expect(pm.response.text()).to.include('amount');",
							"tests[\"Verify date\"] = pm.expect(pm.response.text()).to.include('date');",
							"tests[\"verify metadata\"] = pm.expect(pm.response.text()).to.include('metaData');",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountName\", \"Personal Checking\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.status\", \"SCHEDULED\");",
							"var Paymentid = convertedData.Success.Payment.id._;",
							"var PayConfirmation = convertedData.Success.Payment.confirmationNumber;",
							"var createdTime = convertedData.Success.Payment.metaData.createdTime;",
							"var today = this.date;",
							"console.log(PayConfirmation)",
							"console.log(Paymentid)",
							"",
							"// Assigning the extracted value in to a global variable",
							"pm.environment.set(\"Paymentid\", Paymentid);",
							"pm.environment.set(\"PayConfirmation\", PayConfirmation);",
							"pm.environment.set(\"createdTime\", createdTime);",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.id._\", pm.environment.get(\"Paymentid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.revision\", \"1\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.createdTime\", pm.environment.get(\"createdTime\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.lastUpdatedTime\", pm.environment.get(\"createdTime\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.date\", ((today)));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.currencyCode\", \"USD\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.amount\", \"10\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountId._\", \"43234\");",
							"//expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountName\", \"Personal Checking\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountNickname\", \"Personal Checking\");",
							"//expectResponseBodyToHaveJsonProperty(\"Success.Payment.status\", \"SCHEDULED\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.confirmationNumber\", ((PayConfirmation)));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.expectedDeliveryDate\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeId._\", pm.environment.get(\"Payeeid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeName\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeNickname\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeAccountNumber\", \"****3922\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.deliveryMethod\", \"TRUST_CHECK\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryId._\", \"103733\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryName\", \"uncategorized\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.autoPayment\", \"false\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.address1\", \"20 Payee road\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.city\", \"Norcroos\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.state\", \"GA\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.country\", \"US\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.postalCode\", \"30091\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.paymentRuleId\");",
							"",
							"",
							"//pm.test(\"Check Payee Name\", function () {",
							"//    pm.expect(convertedData.Success.Payees.Payee.name).to.equal(\"ManagePayee\");",
							"//    pm.expect(convertedData.Success.Payees.Payee.status).to.equal(\"ACTIVE\");",
							"//});",
							"",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\""
					},
					{
						"key": "intuit_payment_app_token",
						"type": "text",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"type": "text",
						"value": "PRIMARY"
					},
					{
						"key": "intuit_loginId",
						"type": "text",
						"value": ""
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "identity;q=1, *;q=0"
					},
					{
						"key": "bbs_realm_id",
						"type": "text",
						"value": "{{realmid}}",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Payment xmlns=\"http://www.intuit.com/payment/cdm/v1\">\n        <date>{{PaymentDate}}</date>\n        <amount>\n            <currencyCode>USD</currencyCode>\n            <amount>10.00</amount>\n        </amount>\n        <accountId idDomain=\"IPE\">43234</accountId>\n        <accountName>Personal Checking</accountName>\n        <accountNickname>Personal Checking</accountNickname>\n        <status>SCHEDULED</status>\n        <expectedDeliveryDate>2020-01-28</expectedDeliveryDate>\n        <payeeId idDomain=\"IPE\">{{Payeeid}}</payeeId>\n        <payeeName>{{ManagedPayee}}</payeeName>\n        <payeeNickname>{{ManagedPayee}}</payeeNickname>\n        <payeeAccountNumber>{{Accountnum}}</payeeAccountNumber>\n        <deliveryMethod>TRUST_CHECK</deliveryMethod>\n        <categoryId idDomain=\"IPE\">103733</categoryId>\n        <categoryName>uncategorized</categoryName>\n        <autoPayment>true</autoPayment>\n        <address>\n            <address1>20 Payee road</address1>\n            <city>Norcroos</city>\n            <state>GA</state>\n            <country>US</country>\n            <postalCode>30091</postalCode>\n        </address>\n        <paymentRuleId idDomain=\"IPE\">20253</paymentRuleId>\n    </Payment>"
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payment/",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payment",
						""
					]
				},
				"description": "This test is to post a payment"
			},
			"response": []
		},
		{
			"name": "Get Single Payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Count: \"  + convertedData.Success.Payment.length] = true;",
							"tests[\"Got Payment successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify amount\"] = pm.expect(pm.response.text()).to.include('amount');",
							"tests[\"Verify date\"] = pm.expect(pm.response.text()).to.include('date');",
							"tests[\"verify metadata\"] = pm.expect(pm.response.text()).to.include('metaData');",
							"",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.id._\", pm.environment.get(\"Paymentid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.revision\", \"1\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.createdTime\", pm.environment.get(\"createdTime\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.lastUpdatedTime\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.date\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.currencyCode\", \"USD\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.amount\", \"10\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountId._\", \"43234\");",
							"//expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountName\", \"Personal Checking\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountNickname\", \"Personal Checking\");",
							"//expectResponseBodyToHaveJsonProperty(\"Success.Payment.status\", \"SCHEDULED\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.confirmationNumber\", pm.environment.get(\"PayConfirmation\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.expectedDeliveryDate\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeId._\", pm.environment.get(\"Payeeid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeName\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeNickname\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeAccountNumber\", \"****3922\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.deliveryMethod\", \"TRUST_CHECK\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryId._\", \"103733\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryName\", \"uncategorized\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.autoPayment\", \"false\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.address1\", \"20 Payee road\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.city\", \"Norcroos\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.state\", \"GA\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.country\", \"US\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.postalCode\", \"30091\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.paymentRuleId\");",
							"",
							"",
							"//pm.test(\"Check Payee Name\", function () {",
							"//    pm.expect(convertedData.Success.Payees.Payee.name).to.equal(\"ManagePayee\");",
							"//    pm.expect(convertedData.Success.Payees.Payee.status).to.equal(\"ACTIVE\");",
							"//});",
							"",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\""
					},
					{
						"key": "intuit_payment_app_token",
						"type": "text",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"type": "text",
						"value": "PRIMARY"
					},
					{
						"key": "intuit_loginId",
						"type": "text",
						"value": ""
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "identity;q=1, *;q=0"
					},
					{
						"key": "bbs_realm_id",
						"type": "text",
						"value": "{{realmid}}",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payment/{{Paymentid}}",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payment",
						"{{Paymentid}}"
					]
				},
				"description": "This test is to get Payee details from BPS"
			},
			"response": []
		},
		{
			"name": "Modify Payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Posted Payment successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"tests[\"Verify id\"] = pm.expect(pm.response.text()).to.include('id');",
							"tests[\"Verify amount\"] = pm.expect(pm.response.text()).to.include('amount');",
							"tests[\"Verify date\"] = pm.expect(pm.response.text()).to.include('date');",
							"tests[\"verify metadata\"] = pm.expect(pm.response.text()).to.include('metaData');",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.id._\", pm.environment.get(\"Paymentid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.revision\", \"2\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.createdTime\", pm.environment.get(\"createdTime\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.lastUpdatedTime\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.date\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.currencyCode\", \"USD\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.amount\", \"20\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountId._\", \"43234\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountName\", \"Personal Checking\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountNickname\", \"Personal Checking\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.status\", \"SCHEDULED\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.confirmationNumber\", pm.environment.get(\"PayConfirmation\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.expectedDeliveryDate\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeId._\", pm.environment.get(\"Payeeid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeName\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeNickname\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeAccountNumber\", \"****3922\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.deliveryMethod\", \"TRUST_CHECK\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryId._\", \"103733\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryName\", \"uncategorized\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.autoPayment\", \"false\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.address1\", \"20 Payee road\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.city\", \"Norcroos\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.state\", \"GA\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.country\", \"US\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.postalCode\", \"30091\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.paymentRuleId\");",
							"",
							"//pm.test(\"Check Payee Name\", function () {",
							"//    pm.expect(convertedData.Success.Payees.Payee.name).to.equal(\"ManagePayee\");",
							"//    pm.expect(convertedData.Success.Payees.Payee.status).to.equal(\"ACTIVE\");",
							"//});",
							"",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "55c11b04-1f44-4071-bf24-d70e8e9c0c04",
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\""
					},
					{
						"key": "intuit_payment_app_token",
						"type": "text",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"type": "text",
						"value": "PRIMARY"
					},
					{
						"key": "intuit_loginId",
						"type": "text",
						"value": ""
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "identity;q=1, *;q=0"
					},
					{
						"key": "bbs_realm_id",
						"type": "text",
						"value": "{{realmid}}",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": "<Payment xmlns=\"http://www.intuit.com/payment/cdm/v1\">\n        <id idDomain=\"IPE\">{{Paymentid}}</id>\n        <revision>1</revision>\n        <date>{{PaymentDate}}</date>\n        <amount>\n            <currencyCode>USD</currencyCode>\n            <amount>20.00</amount>\n        </amount>\n        <accountId idDomain=\"IPE\">43234</accountId>\n        <accountName>Personal Checking</accountName>\n        <accountNickname>Personal Checking</accountNickname>\n        <status>SCHEDULED</status>\n        <expectedDeliveryDate>2020-01-28</expectedDeliveryDate>\n        <payeeId idDomain=\"IPE\">{{Payeeid}}</payeeId>\n        <payeeName>{{ManagedPayee}}</payeeName>\n        <payeeNickname>{{ManagedPayee}}</payeeNickname>\n        <payeeAccountNumber>{{Accountnum}}</payeeAccountNumber>\n        <deliveryMethod>TRUST_CHECK</deliveryMethod>\n        <categoryId idDomain=\"IPE\">103733</categoryId>\n        <categoryName>uncategorized</categoryName>\n        <autoPayment>true</autoPayment>\n        <address>\n            <address1>20 Payee road</address1>\n            <city>Norcroos</city>\n            <state>GA</state>\n            <country>US</country>\n            <postalCode>30091</postalCode>\n        </address>\n        <paymentRuleId idDomain=\"IPE\">20253</paymentRuleId>\n    </Payment>"
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payment/",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payment",
						""
					]
				},
				"description": "This test is to post a payment"
			},
			"response": []
		},
		{
			"name": "Delete- Payment",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3d5670c9-7aaa-489b-88b0-3ca40f27579c",
						"exec": [
							"//Load pxlib",
							"var pxlib = eval(pm.globals.get(\"pxlib\"));",
							"",
							"//Start testing using pxlib",
							"startPXTest(pm, pm.globals.get(\"useStrictValidation\"));",
							"",
							"//Validate response status code",
							"expectResponseStatusCodeToBe(200);",
							"",
							"//Validate response body",
							"",
							"let convertedData = xml2Json(pm.response.text());",
							"tests[\"Payment Deleted successfully\"] = pm.expect(pm.response.text()).to.include('Success');",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.id._\", pm.environment.get(\"Paymentid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.revision\", \"3\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.createdTime\", pm.environment.get(\"createdTime\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.metaData.lastUpdatedTime\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.date\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.currencyCode\", \"USD\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.amount.amount\", \"20\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountId._\", \"43234\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountName\", \"Personal Checking\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.accountNickname\", \"Personal Checking\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.status\", \"CANCELED\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.confirmationNumber\", pm.environment.get(\"PayConfirmation\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.expectedDeliveryDate\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeId._\", pm.environment.get(\"Payeeid\"));",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeName\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeNickname\", \"ManagePayee\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.payeeAccountNumber\", \"****3922\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.deliveryMethod\", \"TRUST_CHECK\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryId._\", \"103733\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.categoryName\", \"uncategorized\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.autoPayment\", \"false\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.address1\", \"20 Payee road\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.city\", \"Norcroos\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.state\", \"GA\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.country\", \"US\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.address.postalCode\", \"30091\");",
							"expectResponseBodyToHaveJsonProperty(\"Success.Payment.paymentRuleId\");",
							"//End testing using pxlib",
							"endPXTest();",
							"",
							"var contentTypeHeaderExists = responseHeaders.hasOwnProperty(\"Content-Type\");",
							"tests[\"Has Content-Type\"] = contentTypeHeaderExists;",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/xml"
					},
					{
						"key": "Authorization",
						"type": "text",
						"value": "INTUITAUTH intuit-fiid=\"{{FIID}}\",intuit-urid=\"{{GUID}}\" intuit-fiscid=\"{{loginid}}\""
					},
					{
						"key": "intuit_payment_app_token",
						"type": "text",
						"value": "3696638E-45FE-4B13-97AB-73026AA91F98",
						"disabled": true
					},
					{
						"key": "intuit_payment_userType",
						"type": "text",
						"value": "PRIMARY"
					},
					{
						"key": "intuit_loginId",
						"type": "text",
						"value": ""
					},
					{
						"key": "Accept-Encoding",
						"type": "text",
						"value": "identity;q=1, *;q=0"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{bps-baseurl}}/payment/v1/realm/0/payment/{{Paymentid}}",
					"host": [
						"{{bps-baseurl}}"
					],
					"path": [
						"payment",
						"v1",
						"realm",
						"0",
						"payment",
						"{{Paymentid}}"
					]
				},
				"description": "This test is to get Payee details from BPS"
			},
			"response": []
		}
	]
}